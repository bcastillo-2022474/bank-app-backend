name: Check Backend

on:
  # On every manul trigger
  workflow_dispatch:

  # on every pull request to develop or master
  pull_request:
    branches:
      - develop
      - master
    paths:
      - "src/**"
      - "server.js"
      - "i18n/**"
      - "tests/**"

jobs:
  checks:
    runs-on: ubuntu-latest

    steps:
      - name: Start mongo
        run: docker run -d -p 27017:27017 --name mongo mongo:6.0 --replSet rs0 --bind_ip_all

      - name: Initialize MongoDB Replica Set
        run: |
          sleep 7
          docker run --rm mongo:6.0 mongosh --host 172.17.0.1 --eval 'rs.initiate({_id: "rs0", members: [{_id: 0, host: "172.17.0.1:27017"}]})'
          docker run --rm mongo:6.0 mongosh --host 172.17.0.1 --eval "use bank-app-test" --eval "db.createUser({ user: 'user', pwd: 'password', roles: [{ role: 'readWrite', db: 'bank-app-test' }] })"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"

      - name: Install dependencies
        run: npm install

      - name: Set environment variables
        run: |
          rm .env.*
          touch .env.test
          echo "PORT=4000" >> .env.test
          echo "MONGO_URL='mongodb://user:password@172.17.0.1:27017/bank-app-test'" >> .env.test
          echo "JWT_SECRET='6bef1104a2bab0b3a9e9d27875e033da86547968fc3b6ebdbe3f068a2a466e9b'" >> .env.test

      - name: Generate types
        run: npm run once-typesafe-i18n

      - name: Check eslint
        run: npm run lint

      - name: Check typescript
        run: npm run ts

      - name: Run tests
        run: npm run test
